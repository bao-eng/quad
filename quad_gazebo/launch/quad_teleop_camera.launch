<?xml version="1.0"?>
<launch>
  
  <!-- roslaunch arguments -->
  <env name="GAZEBO_MODEL_PATH" value="$(find eufs_description)"/>
  <env name="GAZEBO_RESOURCE_PATH" value="$(find eufs_description)"/>
  <arg name="namespace" default="eufs"/>
  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="cmd_timeout" default="0.5"/>
  
  <!-- Vehicle pose -->
  <arg name="x" default="-15.0"/>
  <arg name="y" default="14.4"/>
  <arg name="z" default="0.5"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <!--arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0.5"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/-->
  
  <!-- eufs_control launch file -->
  <include file="$(find quad_gazebo)/launch/eufs_control_quad.launch"/>

  <!-- Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find eufs_gazebo)/worlds/small_track.world"/>
    <!--arg name="world_name" value="$(find quad_gazebo)/worlds/wall.world"/-->
    <arg name="debug" value="$(arg debug)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->  
  <param command="$(find xacro)/xacro '$(find quad_description)/urdf/quad_low.xacro' --inorder" name="robot_description"/>

  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
  <node args="-urdf -model quad -param robot_description 
    -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)" 
    name="urdf_spawner" output="screen" pkg="gazebo_ros" respawn="false" type="spawn_model"/>
  
  <!-- start robot_control node -->
  <include file="$(find quad_gazebo)/launch/robot_control_quad.launch"/>

  <node respawn="false" pkg="joy" type="joy_node" name="joy" >
   <param name="dev" type="string" value="/dev/input/js0" />
   <!--param name="deadzone" value="0.12" /-->
  </node>

  <node pkg="quad_gazebo" name="quad_teleop_gazebo2" type="quad_teleop_gazebo2.py" args="twistToAckermannDrive:=robot_control/command"/>
  
  <!--include file="$(find quad_gazebo)/launch/hector_mapping.launch"/-->
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find quad_teleop)/rviz/quad.rviz"/>

  <!--include file="$(find quad_gazebo)/launch/hector_mapping_tutorial.launch"/-->

  <!-- Python script to republish ground truth -->
  <!--node 
    name="ground_truth_republisher"
    pkg="eufs_gazebo"
    type="ground_truth_republisher.py"
    output="screen"
  /-->
  
</launch>
